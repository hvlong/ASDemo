apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-platform-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "com.aspire"
    minSdkVersion 19
    targetSdkVersion 28
    versionCode 1
    versionName "1.0.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
    multiDexEnabled true
  }

  signingConfigs {
    release {
      storeFile file("../release_info/keystore")
      storePassword ""
      keyAlias ""
      keyPassword ""
    }
  }

  flavorDimensions "tier"

  productFlavors {
    dev {
      dimension 'tier'
      applicationId "com.aspire"
      versionCode 1
      versionName "1.0.1"
      // URL CONFIGS
      buildConfigField("String", "BASE_URL", "\"https://demo.com/\"")
    }

  }

  buildTypes {

    debug {
      ext.enableCrashlytics = false
      applicationVariants.all { variant -> appendVersionNameVersionCode(variant) }
    }

    release {
      minifyEnabled true
      shrinkResources true

      // Config release-proguard
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      applicationVariants.all { variant -> appendVersionNameVersionCode(variant) }
    }
  }

  packagingOptions {
    exclude 'META-INF/rxjava.properties'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  androidExtensions {
    experimental = true
  }
  dataBinding {
    enabled = true
  }
  kapt {
    useBuildCache = true
  }
  kapt {
    mapDiagnosticLocations = true
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }
  configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
  }
  lintOptions {
    disable 'MissingTranslation'
    check 'Interoperability'
    disable 'GradleDependency'
    abortOnError false       
    checkAllWarnings false
    checkReleaseBuilds false
    ignoreWarnings true
    quiet true
  }
  // When building Android App Bundles, the splits block is ignored.
  splits {}
  // Instead, use the bundle block to control which types of configuration APKs
  // you want your app bundle to support.
  bundle {
    language {
      // Specifies that the app bundle should not support
      // configuration APKs for language resources. These
      // resources are instead packaged with each base and
      // dynamic feature APK.
      enableSplit = false
    }
    density {
      // This property is set to true by default.
      enableSplit = true
    }
    abi {
      // This property is set to true by default.
      enableSplit = true
    }
  }
  buildToolsVersion '28.0.3'
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.11'
  implementation 'androidx.appcompat:appcompat:1.0.2'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'com.google.android.material:material:1.0.0'
  implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha01'
  implementation 'androidx.percentlayout:percentlayout:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.annotation:annotation:1.0.1'
  // Retrofit and OkHttp
  implementation 'com.squareup.retrofit2:retrofit:2.5.0'
  implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
  implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
  //OkHttp3
  implementation 'com.squareup.okhttp3:okhttp:3.12.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
  //RxJava, RxKotlin
  implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
  implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
  implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
  //Dagger
  implementation 'com.google.dagger:dagger:2.19'
  implementation 'com.google.dagger:dagger-android:2.15'
  implementation 'com.google.dagger:dagger-android-support:2.15'
  kapt "com.google.dagger:dagger-compiler:2.15"
  kapt "com.google.dagger:dagger-android-processor:2.16"
  //Glide
  kapt 'com.github.bumptech.glide:compiler:4.8.0'
  implementation 'com.github.bumptech.glide:glide:4.8.0'
  //Event bus
  implementation 'org.greenrobot:eventbus:3.1.1'
  //Ktx core
  implementation 'androidx.core:core-ktx:1.0.1'
  implementation 'androidx.core:core:1.0.1'
  kapt 'androidx.databinding:databinding-compiler:3.3.0'
  //Leak canary
  implementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
  // This dependency is downloaded from the Googleâ€™s Maven repository.
  // So, make sure you also include that repository in your project's build.gradle fileIdentity.
  implementation 'com.google.android.play:core:1.3.6'
  implementation 'com.google.code.gson:gson:2.8.5'
  implementation 'in.gauriinfotech:commons:1.0.8'
  implementation 'com.android.support:support-v4:26.1.0'
  implementation 'com.android.support:multidex:1.0.2'


  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test:runner:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

@SuppressWarnings("GroovyAssignabilityCheck")
def appendVersionNameVersionCode(variant) {
  variant.outputs.all { output ->
//    def applicationId = variant.buildType.applicationISuffix
//    if (output.zipAign) {
//      def outputFile = output.oututFile
//      if (outputFile != null && outputFile.name.endsWith('.ak')) {
//        def time = new Date().format("dd-MM-yyyy", TimeZone.getTimeZone(UTC"))
//        def fileName = outputFile.name.replace"app",
//            "${applicationId}_v${variant.versionName}_${variant.versionCode}_${ime}")
//        outputFileName = feName
//
         }
//    }
  }


com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true
